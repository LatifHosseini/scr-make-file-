/**
 * \file IfxScr_reg.h
 * \brief
 * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: TC3XXSCR_UM_V1.4.0.R0
 * Specification: TC3xx User Manual V1.4.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Scr_Registers_Cfg Scr address
 * \ingroup IfxSfr_Scr_Registers
 * 
 * \defgroup IfxSfr_Scr_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Scr_Registers_Cfg
 *
 * \defgroup IfxSfr_Scr_Registers_Cfg_Scr 2-SCR
 * \ingroup IfxSfr_Scr_Registers_Cfg
 *
 *
 */
#ifndef IFXSCR_REG_H
#define IFXSCR_REG_H 1
/******************************************************************************/
#include "IfxScr_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Scr_Registers_Cfg_Scr
 * \{  */
/** \brief 0, Watchdog Timer Control Register */
#define SCR_WDT_CON /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WDT_CON*)0x81u)

/** \brief 1, Watchdog Timer Reload Register */
#define SCR_WDT_REL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WDT_REL*)0x82u)

/** \brief 2, Watchdog Window-Boundary Register */
#define SCR_WDT_WINB /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WDT_WINB*)0x83u)

/** \brief 3, Watchdog Timer Low Byte */
#define SCR_WDT_L /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WDT_L*)0x84u)

/** \brief 4, Watchdog Timer High Byte */
#define SCR_WDT_H /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WDT_H*)0x85u)

/** \brief 0, Password Register */
#define SCR_PASSWD /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_PASSWD*)0x86u)

/** \brief 1, On-Chip XRAM Address Higher Order */
#define SCR_XADDRH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_XADDRH*)0x87u)

/** \brief 2, System Control Register 0 */
#define SCR_SYSCON0 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SYSCON0*)0x88u)

/** \brief 0, Control Register Low [Programming Mode] */
#define SCR_SSC_CONPL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SSC_CONPL*)0x89u)

/** \brief 0, Control Register Low [Operation Mode] */
#define SCR_SSC_CONOL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SSC_CONOL*)0x89u)

/** \brief 1, Control Register High [Programming Mode] */
#define SCR_SSC_CONPH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SSC_CONPH*)0x8Au)

/** \brief 1, Control Register High [Operation Mode] */
#define SCR_SSC_CONOH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SSC_CONOH*)0x8Au)

/** \brief 2, Transmitter Buffer Register */
#define SCR_SSC_TBL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SSC_TBL*)0x8Bu)

/** \brief 3, Receiver Buffer Register */
#define SCR_SSC_RBL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SSC_RBL*)0x8Cu)

/** \brief 4, Baud Rate Timer Reload Register Low */
#define SCR_SSC_BRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SSC_BRL*)0x8Du)

/** \brief 5, Baud Rate Timer Reload Register High */
#define SCR_SSC_BRH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SSC_BRH*)0x8Eu)

/** \brief 0, Page Register for Port SFRs */
#define SCR_IO_PAGE /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_IO_PAGE*)0x8Fu)

/** \brief 1, Port P00 Output Register */
#define SCR_P0_OUT /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_OUT*)0x90u)
/** Alias (User Manual Name) for SCR_P0_OUT.
* To use register names with standard convension, please use SCR_P0_OUT.
*/
#define SCR_P00_OUT (SCR_P0_OUT)

/** \brief 1, Port P00 Input/Output Control Register 0 */
#define SCR_P0_IOCR0 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IOCR*)0x90u)
/** Alias (User Manual Name) for SCR_P0_IOCR0.
* To use register names with standard convension, please use SCR_P0_IOCR0.
*/
#define SCR_P00_IOCR0 (SCR_P0_IOCR0)

/** \brief 1, Port P00 Pad Driver Mode 0 Register */
#define SCR_P0_PDR0 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_PDR0*)0x90u)
/** Alias (User Manual Name) for SCR_P0_PDR0.
* To use register names with standard convension, please use SCR_P0_PDR0.
*/
#define SCR_P00_PDR0 (SCR_P0_PDR0)

/** \brief 2, Port P00 Input/Output Control Register 1 */
#define SCR_P0_IOCR1 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IOCR*)0x91u)
/** Alias (User Manual Name) for SCR_P0_IOCR1.
* To use register names with standard convension, please use SCR_P0_IOCR1.
*/
#define SCR_P00_IOCR1 (SCR_P0_IOCR1)

/** \brief 2, Port P00 Input Register */
#define SCR_P0_IN /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IN*)0x91u)
/** Alias (User Manual Name) for SCR_P0_IN.
* To use register names with standard convension, please use SCR_P0_IN.
*/
#define SCR_P00_IN (SCR_P0_IN)

/** \brief 2, Port P00 Pad Driver Mode 2 Register */
#define SCR_P0_PDR2 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_PDR2*)0x91u)
/** Alias (User Manual Name) for SCR_P0_PDR2.
* To use register names with standard convension, please use SCR_P0_PDR2.
*/
#define SCR_P00_PDR2 (SCR_P0_PDR2)

/** \brief 3, Port P00 Input/Output Control Register 2 */
#define SCR_P0_IOCR2 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IOCR*)0x92u)
/** Alias (User Manual Name) for SCR_P0_IOCR2.
* To use register names with standard convension, please use SCR_P0_IOCR2.
*/
#define SCR_P00_IOCR2 (SCR_P0_IOCR2)

/** \brief 3, Port P00 Output Modification Set Register */
#define SCR_P0_OMSR /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_OMSR*)0x92u)
/** Alias (User Manual Name) for SCR_P0_OMSR.
* To use register names with standard convension, please use SCR_P0_OMSR.
*/
#define SCR_P00_OMSR (SCR_P0_OMSR)

/** \brief 3, Port P00 Pad Driver Mode 4 Register */
#define SCR_P0_PDR4 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_PDR4*)0x92u)
/** Alias (User Manual Name) for SCR_P0_PDR4.
* To use register names with standard convension, please use SCR_P0_PDR4.
*/
#define SCR_P00_PDR4 (SCR_P0_PDR4)

/** \brief 4, Port P00 Input/Output Control Register 3 */
#define SCR_P0_IOCR3 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IOCR*)0x93u)
/** Alias (User Manual Name) for SCR_P0_IOCR3.
* To use register names with standard convension, please use SCR_P0_IOCR3.
*/
#define SCR_P00_IOCR3 (SCR_P0_IOCR3)

/** \brief 4, Port P00 Output Modification Clear Register */
#define SCR_P0_OMCR /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_OMCR*)0x93u)
/** Alias (User Manual Name) for SCR_P0_OMCR.
* To use register names with standard convension, please use SCR_P0_OMCR.
*/
#define SCR_P00_OMCR (SCR_P0_OMCR)

/** \brief 4, Port P00 Pad Driver Mode 6 Register */
#define SCR_P0_PDR6 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_PDR6*)0x93u)
/** Alias (User Manual Name) for SCR_P0_PDR6.
* To use register names with standard convension, please use SCR_P0_PDR6.
*/
#define SCR_P00_PDR6 (SCR_P0_PDR6)

/** \brief 5, Port P00 Input/Output Control Register 4 */
#define SCR_P0_IOCR4 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IOCR*)0x94u)
/** Alias (User Manual Name) for SCR_P0_IOCR4.
* To use register names with standard convension, please use SCR_P0_IOCR4.
*/
#define SCR_P00_IOCR4 (SCR_P0_IOCR4)

/** \brief 5, Port P00 Output Modification Toggle Register */
#define SCR_P0_OMTR /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_OMTR*)0x94u)
/** Alias (User Manual Name) for SCR_P0_OMTR.
* To use register names with standard convension, please use SCR_P0_OMTR.
*/
#define SCR_P00_OMTR (SCR_P0_OMTR)

/** \brief 6, Port P00 Input/Output Control Register 5 */
#define SCR_P0_IOCR5 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IOCR*)0x95u)
/** Alias (User Manual Name) for SCR_P0_IOCR5.
* To use register names with standard convension, please use SCR_P0_IOCR5.
*/
#define SCR_P00_IOCR5 (SCR_P0_IOCR5)

/** \brief 6, Port P00 Pin Function Decision Control Register */
#define SCR_P0_PDISC /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_PDISC*)0x95u)
/** Alias (User Manual Name) for SCR_P0_PDISC.
* To use register names with standard convension, please use SCR_P0_PDISC.
*/
#define SCR_P00_PDISC (SCR_P0_PDISC)

/** \brief 7, Port P00 Input/Output Control Register 6 */
#define SCR_P0_IOCR6 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IOCR*)0x96u)
/** Alias (User Manual Name) for SCR_P0_IOCR6.
* To use register names with standard convension, please use SCR_P0_IOCR6.
*/
#define SCR_P00_IOCR6 (SCR_P0_IOCR6)

/** \brief 8, Port P00 Input/Output Control Register 7 */
#define SCR_P0_IOCR7 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IOCR*)0x97u)
/** Alias (User Manual Name) for SCR_P0_IOCR7.
* To use register names with standard convension, please use SCR_P0_IOCR7.
*/
#define SCR_P00_IOCR7 (SCR_P0_IOCR7)

/** \brief 9, Port P01 Output Register */
#define SCR_P1_OUT /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_OUT*)0x98u)
/** Alias (User Manual Name) for SCR_P1_OUT.
* To use register names with standard convension, please use SCR_P1_OUT.
*/
#define SCR_P01_OUT (SCR_P1_OUT)

/** \brief 9, Port P01 Input/Output Control Register 0 */
#define SCR_P1_IOCR0 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IOCR*)0x98u)
/** Alias (User Manual Name) for SCR_P1_IOCR0.
* To use register names with standard convension, please use SCR_P1_IOCR0.
*/
#define SCR_P01_IOCR0 (SCR_P1_IOCR0)

/** \brief 9, Port P01 Pad Driver Mode 0 Register */
#define SCR_P1_PDR0 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_PDR0*)0x98u)
/** Alias (User Manual Name) for SCR_P1_PDR0.
* To use register names with standard convension, please use SCR_P1_PDR0.
*/
#define SCR_P01_PDR0 (SCR_P1_PDR0)

/** \brief A, Port P01 Input/Output Control Register 1 */
#define SCR_P1_IOCR1 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IOCR*)0x99u)
/** Alias (User Manual Name) for SCR_P1_IOCR1.
* To use register names with standard convension, please use SCR_P1_IOCR1.
*/
#define SCR_P01_IOCR1 (SCR_P1_IOCR1)

/** \brief A, Port P01 Input Register */
#define SCR_P1_IN /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IN*)0x99u)
/** Alias (User Manual Name) for SCR_P1_IN.
* To use register names with standard convension, please use SCR_P1_IN.
*/
#define SCR_P01_IN (SCR_P1_IN)

/** \brief A, Port P01 Pad Driver Mode 2 Register */
#define SCR_P1_PDR2 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_PDR2*)0x99u)
/** Alias (User Manual Name) for SCR_P1_PDR2.
* To use register names with standard convension, please use SCR_P1_PDR2.
*/
#define SCR_P01_PDR2 (SCR_P1_PDR2)

/** \brief B, Port P01 Input/Output Control Register 2 */
#define SCR_P1_IOCR2 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IOCR*)0x9Au)
/** Alias (User Manual Name) for SCR_P1_IOCR2.
* To use register names with standard convension, please use SCR_P1_IOCR2.
*/
#define SCR_P01_IOCR2 (SCR_P1_IOCR2)

/** \brief B, Port P01 Output Modification Set Register */
#define SCR_P1_OMSR /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_OMSR*)0x9Au)
/** Alias (User Manual Name) for SCR_P1_OMSR.
* To use register names with standard convension, please use SCR_P1_OMSR.
*/
#define SCR_P01_OMSR (SCR_P1_OMSR)

/** \brief B, Port P01 Pad Driver Mode 4 Register */
#define SCR_P1_PDR4 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_PDR4*)0x9Au)
/** Alias (User Manual Name) for SCR_P1_PDR4.
* To use register names with standard convension, please use SCR_P1_PDR4.
*/
#define SCR_P01_PDR4 (SCR_P1_PDR4)

/** \brief C, Port P01 Input/Output Control Register 3 */
#define SCR_P1_IOCR3 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IOCR*)0x9Bu)
/** Alias (User Manual Name) for SCR_P1_IOCR3.
* To use register names with standard convension, please use SCR_P1_IOCR3.
*/
#define SCR_P01_IOCR3 (SCR_P1_IOCR3)

/** \brief C, Port P01 Output Modification Clear Register */
#define SCR_P1_OMCR /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_OMCR*)0x9Bu)
/** Alias (User Manual Name) for SCR_P1_OMCR.
* To use register names with standard convension, please use SCR_P1_OMCR.
*/
#define SCR_P01_OMCR (SCR_P1_OMCR)

/** \brief C, Port P01 Pad Driver Mode 6 Register */
#define SCR_P1_PDR6 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_PDR6*)0x9Bu)
/** Alias (User Manual Name) for SCR_P1_PDR6.
* To use register names with standard convension, please use SCR_P1_PDR6.
*/
#define SCR_P01_PDR6 (SCR_P1_PDR6)

/** \brief D, Port P01 Input/Output Control Register 4 */
#define SCR_P1_IOCR4 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IOCR*)0x9Cu)
/** Alias (User Manual Name) for SCR_P1_IOCR4.
* To use register names with standard convension, please use SCR_P1_IOCR4.
*/
#define SCR_P01_IOCR4 (SCR_P1_IOCR4)

/** \brief D, Port P01 Output Modification Toggle Register */
#define SCR_P1_OMTR /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_OMTR*)0x9Cu)
/** Alias (User Manual Name) for SCR_P1_OMTR.
* To use register names with standard convension, please use SCR_P1_OMTR.
*/
#define SCR_P01_OMTR (SCR_P1_OMTR)

/** \brief E, Port P01 Input/Output Control Register 5 */
#define SCR_P1_IOCR5 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IOCR*)0x9Du)
/** Alias (User Manual Name) for SCR_P1_IOCR5.
* To use register names with standard convension, please use SCR_P1_IOCR5.
*/
#define SCR_P01_IOCR5 (SCR_P1_IOCR5)

/** \brief E, Port P01 Pin Function Decision Control Register */
#define SCR_P1_PDISC /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_PDISC*)0x9Du)
/** Alias (User Manual Name) for SCR_P1_PDISC.
* To use register names with standard convension, please use SCR_P1_PDISC.
*/
#define SCR_P01_PDISC (SCR_P1_PDISC)

/** \brief F, Port P01 Input/Output Control Register 6 */
#define SCR_P1_IOCR6 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IOCR*)0x9Eu)
/** Alias (User Manual Name) for SCR_P1_IOCR6.
* To use register names with standard convension, please use SCR_P1_IOCR6.
*/
#define SCR_P01_IOCR6 (SCR_P1_IOCR6)

/** \brief 10, Port P01 Input/Output Control Register 7 */
#define SCR_P1_IOCR7 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_P_IOCR*)0x9Fu)
/** Alias (User Manual Name) for SCR_P1_IOCR7.
* To use register names with standard convension, please use SCR_P1_IOCR7.
*/
#define SCR_P01_IOCR7 (SCR_P1_IOCR7)

/** \brief 0, Wake-Up CAN Configuration Register */
#define SCR_WCAN_CFG /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_CFG*)0xB0u)

/** \brief 0, Wake-Up CAN Interrupt and Event Status Register 0 */
#define SCR_WCAN_INTESTAT0 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_INTESTAT0*)0xB0u)

/** \brief 0, Message Identifier Control Register 0 */
#define SCR_WCAN_ID0_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_ID0_CTRL*)0xB0u)

/** \brief 0, DATA Control Register 0 */
#define SCR_DATA0_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_DATA_CTRL*)0xB0u)
/** Alias (User Manual Name) for SCR_DATA0_CTRL.
* To use register names with standard convension, please use SCR_DATA0_CTRL.
*/
#define SCR_WCAN_DATA0_CTRL (SCR_DATA0_CTRL)

/** \brief 1, DATA Control Register 1 */
#define SCR_DATA1_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_DATA_CTRL*)0xB1u)
/** Alias (User Manual Name) for SCR_DATA1_CTRL.
* To use register names with standard convension, please use SCR_DATA1_CTRL.
*/
#define SCR_WCAN_DATA1_CTRL (SCR_DATA1_CTRL)

/** \brief 1, Wake-Up CAN Interrupt Mask Register */
#define SCR_WCAN_INTMRSLT /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_INTMRSLT*)0xB1u)

/** \brief 1, Wake-Up CAN Interrupt and Event Status Register 1 */
#define SCR_WCAN_INTESTAT1 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_INTESTAT1*)0xB1u)

/** \brief 1, Message Identifier Control Register 1 */
#define SCR_WCAN_ID1_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_ID1_CTRL*)0xB1u)

/** \brief 2, DATA Control Register 2 */
#define SCR_DATA2_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_DATA_CTRL*)0xB2u)
/** Alias (User Manual Name) for SCR_DATA2_CTRL.
* To use register names with standard convension, please use SCR_DATA2_CTRL.
*/
#define SCR_WCAN_DATA2_CTRL (SCR_DATA2_CTRL)

/** \brief 2, CDR Control Register */
#define SCR_WCAN_CDR_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_CDR_CTRL*)0xB2u)

/** \brief 2, Wake-Up CAN Error Counter Register */
#define SCR_WCAN_FRMERRCNT /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_FRMERRCNT*)0xB2u)

/** \brief 2, Message Identifier Control Register 2 */
#define SCR_WCAN_ID2_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_ID2_CTRL*)0xB2u)

/** \brief 3, DATA Control Register 3 */
#define SCR_DATA3_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_DATA_CTRL*)0xB3u)
/** Alias (User Manual Name) for SCR_DATA3_CTRL.
* To use register names with standard convension, please use SCR_DATA3_CTRL.
*/
#define SCR_WCAN_DATA3_CTRL (SCR_DATA3_CTRL)

/** \brief 3, CDR Upper Limit Control Register */
#define SCR_WCAN_CDR_UPPER_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_CDR_UPPER_CTRL*)0xB3u)

/** \brief 3, Wake-Up CAN Interrupt and Event Status Clear Register 0 */
#define SCR_WCAN_INTESCLR0 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_INTESCLR0*)0xB3u)

/** \brief 3, Message Identifier Control Register 3 */
#define SCR_WCAN_ID3_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_ID3_CTRL*)0xB3u)

/** \brief 4, DATA Control Register 4 */
#define SCR_DATA4_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_DATA_CTRL*)0xB4u)
/** Alias (User Manual Name) for SCR_DATA4_CTRL.
* To use register names with standard convension, please use SCR_DATA4_CTRL.
*/
#define SCR_WCAN_DATA4_CTRL (SCR_DATA4_CTRL)

/** \brief 4, Message Identifier Mask Register 0 */
#define SCR_WCAN_MASK_ID0_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_MASK_ID0_CTRL*)0xB4u)

/** \brief 4, CDR Lower Limit Control Register */
#define SCR_WCAN_CDR_LOWER_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_CDR_LOWER_CTRL*)0xB4u)

/** \brief 4, Wake-Up CAN Interrupt and Event Status Clear Register 1 */
#define SCR_WCAN_INTESCLR1 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_INTESCLR1*)0xB4u)

/** \brief 5, DATA Control Register 5 */
#define SCR_DATA5_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_DATA_CTRL*)0xB5u)
/** Alias (User Manual Name) for SCR_DATA5_CTRL.
* To use register names with standard convension, please use SCR_DATA5_CTRL.
*/
#define SCR_WCAN_DATA5_CTRL (SCR_DATA5_CTRL)

/** \brief 5, Message Identifier Mask Register 1 */
#define SCR_WCAN_MASK_ID1_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_MASK_ID1_CTRL*)0xB5u)

/** \brief 5, Bit Timing Logic 1 Control Register */
#define SCR_WCAN_BTL1_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_BTL1_CTRL*)0xB5u)

/** \brief 5, CDR Measured High Register */
#define SCR_WCAN_CDR_MEAS_HIGH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_CDR_MEAS_HIGH*)0xB5u)

/** \brief 6, DATA Control Register 6 */
#define SCR_DATA6_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_DATA_CTRL*)0xB6u)
/** Alias (User Manual Name) for SCR_DATA6_CTRL.
* To use register names with standard convension, please use SCR_DATA6_CTRL.
*/
#define SCR_WCAN_DATA6_CTRL (SCR_DATA6_CTRL)

/** \brief 6, Message Identifier Mask Register 2 */
#define SCR_WCAN_MASK_ID2_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_MASK_ID2_CTRL*)0xB6u)

/** \brief 6, Bit Timing Logic 2 Control Register */
#define SCR_WCAN_BTL2_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_BTL2_CTRL*)0xB6u)

/** \brief 6, CDR Measured Low Register */
#define SCR_WCAN_CDR_MEAS_LOW /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_CDR_MEAS_LOW*)0xB6u)

/** \brief 7, DATA Control Register 7 */
#define SCR_DATA7_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_DATA_CTRL*)0xB7u)
/** Alias (User Manual Name) for SCR_DATA7_CTRL.
* To use register names with standard convension, please use SCR_DATA7_CTRL.
*/
#define SCR_WCAN_DATA7_CTRL (SCR_DATA7_CTRL)

/** \brief 7, Message Identifier Mask Register 3 */
#define SCR_WCAN_MASK_ID3_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_MASK_ID3_CTRL*)0xB7u)

/** \brief 7, Message Data Length Code Control Register */
#define SCR_WCAN_DLC_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_DLC_CTRL*)0xB7u)

/** \brief 7, CAN FD Control Register */
#define SCR_WCAN_FD_CTRL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_FD_CTRL*)0xB7u)

/** \brief 8, Page Register for WCAN */
#define SCR_WCAN_PAGE /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_WCAN_PAGE*)0xB8u)

/** \brief 0, Serial Channel Control Register */
#define SCR_UART_SCON /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_UART_SCON*)0xBAu)

/** \brief 1, Serial Data Buffer */
#define SCR_UART_SBUF /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_UART_SBUF*)0xBBu)

/** \brief 0, Baudrate Timer/Reload Register, Low Byte */
#define SCR_UART_BGL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_UART_BGL*)0xBCu)

/** \brief 1, Baudrate Control Register */
#define SCR_UART_BCON /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_UART_BCON*)0xBDu)

/** \brief 2, LIN Status Register */
#define SCR_UART_LINST /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_UART_LINST*)0xBEu)

/** \brief 3, Baudrate Timer/Reload Register, High Byte */
#define SCR_UART_BGH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_UART_BGH*)0xBFu)

/** \brief 0, T2CCU Compare Shadow Register */
#define SCR_T2CCU_COSHDW /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_COSHDW*)0xC0u)

/** \brief 0, Timer 2 Control Register */
#define SCR_T2_CON /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2_CON*)0xC0u)

/** \brief 0, T2CCU Capture/Compare Enable Register */
#define SCR_T2CCU_CCEN /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CCEN*)0xC0u)

/** \brief 0, T2CCU Compare Control Register */
#define SCR_T2CCU_COCON /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_COCON*)0xC0u)

/** \brief 1, T2CCU Capture/Compare Register x Low */
#define SCR_T2CCU_CC020_CCXL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CC02_CCXL*)0xC1u)
/** Alias (User Manual Name) for SCR_T2CCU_CC020_CCXL.
* To use register names with standard convension, please use SCR_T2CCU_CC020_CCXL.
*/
#define SCR_T2CCU_CC0L (SCR_T2CCU_CC020_CCXL)

/** \brief 1, T2CCU Capture/Compare Register x Low */
#define SCR_T2CCU_CC353_CCXL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CC35_CCXL*)0xC1u)
/** Alias (User Manual Name) for SCR_T2CCU_CC353_CCXL.
* To use register names with standard convension, please use SCR_T2CCU_CC353_CCXL.
*/
#define SCR_T2CCU_CC3L (SCR_T2CCU_CC353_CCXL)

/** \brief 1, T2CCU Capture/Compare Time Base Select Register */
#define SCR_T2CCU_CCTBSEL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CCTBSEL*)0xC1u)

/** \brief 1, Timer 2 Mode Register */
#define SCR_T2_MOD /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2_MOD*)0xC1u)

/** \brief 2, T2CCU Capture/Compare Register x High */
#define SCR_T2CCU_CC020_CCXH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CC02_CCXH*)0xC2u)
/** Alias (User Manual Name) for SCR_T2CCU_CC020_CCXH.
* To use register names with standard convension, please use SCR_T2CCU_CC020_CCXH.
*/
#define SCR_T2CCU_CC0H (SCR_T2CCU_CC020_CCXH)

/** \brief 2, T2CCU Capture/Compare Register x High */
#define SCR_T2CCU_CC353_CCXH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CC35_CCXH*)0xC2u)
/** Alias (User Manual Name) for SCR_T2CCU_CC353_CCXH.
* To use register names with standard convension, please use SCR_T2CCU_CC353_CCXH.
*/
#define SCR_T2CCU_CC3H (SCR_T2CCU_CC353_CCXH)

/** \brief 2, T2CCU Capture/Compare Timer Dead-Time Control Register Low */
#define SCR_T2CCU_CCTDTCL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CCTDTCL*)0xC2u)

/** \brief 2, T2CCU Capture/Compare Timer Reload Register Low */
#define SCR_T2CCU_CCTRELL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CCTRELL*)0xC2u)

/** \brief 2, Timer 2 Reload/Capture Register, Low Byte */
#define SCR_T2_RC2L /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2_RC2L*)0xC2u)

/** \brief 3, T2CCU Capture/Compare Register x Low */
#define SCR_T2CCU_CC021_CCXL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CC02_CCXL*)0xC3u)
/** Alias (User Manual Name) for SCR_T2CCU_CC021_CCXL.
* To use register names with standard convension, please use SCR_T2CCU_CC021_CCXL.
*/
#define SCR_T2CCU_CC1L (SCR_T2CCU_CC021_CCXL)

/** \brief 3, T2CCU Capture/Compare Register x Low */
#define SCR_T2CCU_CC354_CCXL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CC35_CCXL*)0xC3u)
/** Alias (User Manual Name) for SCR_T2CCU_CC354_CCXL.
* To use register names with standard convension, please use SCR_T2CCU_CC354_CCXL.
*/
#define SCR_T2CCU_CC4L (SCR_T2CCU_CC354_CCXL)

/** \brief 3, T2CCU Capture/Compare Timer Dead-Time Control Register High */
#define SCR_T2CCU_CCTDTCH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CCTDTCH*)0xC3u)

/** \brief 3, T2CCU Capture/Compare Timer Reload Register High */
#define SCR_T2CCU_CCTRELH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CCTRELH*)0xC3u)

/** \brief 3, Timer 2 Reload/Capture Register, High Byte */
#define SCR_T2_RC2H /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2_RC2H*)0xC3u)

/** \brief 4, T2CCU Capture/Compare Register x High */
#define SCR_T2CCU_CC021_CCXH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CC02_CCXH*)0xC4u)
/** Alias (User Manual Name) for SCR_T2CCU_CC021_CCXH.
* To use register names with standard convension, please use SCR_T2CCU_CC021_CCXH.
*/
#define SCR_T2CCU_CC1H (SCR_T2CCU_CC021_CCXH)

/** \brief 4, T2CCU Capture/Compare Register x High */
#define SCR_T2CCU_CC354_CCXH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CC35_CCXH*)0xC4u)
/** Alias (User Manual Name) for SCR_T2CCU_CC354_CCXH.
* To use register names with standard convension, please use SCR_T2CCU_CC354_CCXH.
*/
#define SCR_T2CCU_CC4H (SCR_T2CCU_CC354_CCXH)

/** \brief 4, T2CCU Capture/Compare Timer Register Low */
#define SCR_T2CCU_CCTL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CCTL*)0xC4u)

/** \brief 4, Timer 2, Low Byte */
#define SCR_T2_T2L /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2_T2L*)0xC4u)

/** \brief 5, T2CCU Capture/Compare Register x Low */
#define SCR_T2CCU_CC022_CCXL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CC02_CCXL*)0xC5u)
/** Alias (User Manual Name) for SCR_T2CCU_CC022_CCXL.
* To use register names with standard convension, please use SCR_T2CCU_CC022_CCXL.
*/
#define SCR_T2CCU_CC2L (SCR_T2CCU_CC022_CCXL)

/** \brief 5, T2CCU Capture/Compare Register x Low */
#define SCR_T2CCU_CC355_CCXL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CC35_CCXL*)0xC5u)
/** Alias (User Manual Name) for SCR_T2CCU_CC355_CCXL.
* To use register names with standard convension, please use SCR_T2CCU_CC355_CCXL.
*/
#define SCR_T2CCU_CC5L (SCR_T2CCU_CC355_CCXL)

/** \brief 5, T2CCU Capture/Compare Timer Register High */
#define SCR_T2CCU_CCTH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CCTH*)0xC5u)

/** \brief 5, Timer 2, High Byte */
#define SCR_T2_T2H /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2_T2H*)0xC5u)

/** \brief 6, T2CCU Capture/Compare Register x High */
#define SCR_T2CCU_CC022_CCXH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CC02_CCXH*)0xC6u)
/** Alias (User Manual Name) for SCR_T2CCU_CC022_CCXH.
* To use register names with standard convension, please use SCR_T2CCU_CC022_CCXH.
*/
#define SCR_T2CCU_CC2H (SCR_T2CCU_CC022_CCXH)

/** \brief 6, T2CCU Capture/Compare Register x High */
#define SCR_T2CCU_CC355_CCXH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CC35_CCXH*)0xC6u)
/** Alias (User Manual Name) for SCR_T2CCU_CC355_CCXH.
* To use register names with standard convension, please use SCR_T2CCU_CC355_CCXH.
*/
#define SCR_T2CCU_CC5H (SCR_T2CCU_CC355_CCXH)

/** \brief 6, T2CCU Capture/Compare Timer Control Register */
#define SCR_T2CCU_CCTCON /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_CCTCON*)0xC6u)

/** \brief 6, Timer 2 Control Register 1 */
#define SCR_T2_CON1 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2_CON1*)0xC6u)

/** \brief 7, Page Register for T2CCU */
#define SCR_T2CCU_PAGE /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T2CCU_PAGE*)0xC7u)

/** \brief 0, Timer 0/1 Control Register */
#define SCR_T01_TCON /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T01_TCON*)0xC9u)

/** \brief 1, Timer Mode Register */
#define SCR_T01_TMOD /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T01_TMOD*)0xCAu)

/** \brief 2, Timer 0 Low Byte */
#define SCR_T01_TL0 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T01_TL0*)0xCBu)

/** \brief 3, Timer 1 Low Byte */
#define SCR_T01_TL1 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T01_TL1*)0xCCu)

/** \brief 4, Timer 0 High Byte */
#define SCR_T01_TH0 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T01_TH0*)0xCDu)

/** \brief 5, Timer 1 High Byte */
#define SCR_T01_TH1 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_T01_TH1*)0xCEu)

/** \brief 7, Program Status Word Register */
#define SCR_PSW /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_PSW*)0xD0u)

/** \brief 8, Interrupt Enable Register 1 */
#define SCR_IEN1 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_IEN1*)0xD1u)

/** \brief 9, Interrupt Priority High Register */
#define SCR_IPH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_IPH*)0xD2u)

/** \brief A, Interrupt Priority 1 High Register */
#define SCR_IPH1 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_IPH1*)0xD3u)

/** \brief B, Stack Pointer */
#define SCR_SP /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SP*)0xD4u)

/** \brief C, Data Pointer Low Byte */
#define SCR_DPL /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_DPL*)0xD5u)

/** \brief D, Data Pointer High Byte */
#define SCR_DPH /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_DPH*)0xD6u)

/** \brief E, Extended Operation Register */
#define SCR_EO /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_EO*)0xD7u)

/** \brief F, Interrupt Enable Register 0 */
#define SCR_IEN0 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_IEN0*)0xD8u)

/** \brief 10, Power Control Register */
#define SCR_PCON /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_PCON*)0xD9u)

/** \brief 11, B Register */
#define SCR_B /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_B*)0xDAu)

/** \brief 12, Interrupt Priority 1 Register */
#define SCR_IP1 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_IP1*)0xDBu)

/** \brief 13, Interrupt Priority Register */
#define SCR_IP /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_IP*)0xDCu)

/** \brief 17, Accumulator */
#define SCR_ACC /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_ACC*)0xE0u)

/** \brief 0, Real-Time Clock Control Register */
#define SCR_RTC_CON /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_RTC_CON*)0xE1u)

/** \brief 1, Count Clock Register 0 */
#define SCR_RTC_CNT0 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_RTC_CNT*)0xE2u)

/** \brief 2, Count Clock Register 1 */
#define SCR_RTC_CNT1 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_RTC_CNT*)0xE3u)

/** \brief 3, Count Clock Register 2 */
#define SCR_RTC_CNT2 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_RTC_CNT*)0xE4u)

/** \brief 4, Count Clock Register 3 */
#define SCR_RTC_CNT3 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_RTC_CNT*)0xE5u)

/** \brief 5, Real-Time Clock Compare/Capture Register 0 */
#define SCR_RTC_CR0 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_RTC_CR*)0xE6u)

/** \brief 6, Real-Time Clock Compare/Capture Register 1 */
#define SCR_RTC_CR1 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_RTC_CR*)0xE7u)

/** \brief 7, Real-Time Clock Compare/Capture Register 2 */
#define SCR_RTC_CR2 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_RTC_CR*)0xE8u)

/** \brief 8, Real-Time Clock Compare/Capture Register 3 */
#define SCR_RTC_CR3 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_RTC_CR*)0xE9u)

/** \brief 0, Page Register for SFRs */
#define SCR_SCU_PAGE /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SCU_PAGE*)0xF1u)

/** \brief 1, Peripheral Input Select Register 0 */
#define SCR_MODPISEL0 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_MODPISEL0*)0xF2u)

/** \brief 1, Interrupt Request Register 0 */
#define SCR_IRCON0 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_IRCON0*)0xF2u)

/** \brief 1, NMI Status Register */
#define SCR_NMISR /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_NMISR*)0xF2u)

/** \brief 2, Peripheral Input Select Register 1 */
#define SCR_MODPISEL1 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_MODPISEL1*)0xF3u)

/** \brief 2, Interrupt Request Register 1 */
#define SCR_IRCON1 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_IRCON1*)0xF3u)

/** \brief 2, NMI Control Register */
#define SCR_NMICON /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_NMICON*)0xF3u)

/** \brief 3, Peripheral Input Select Register 2 */
#define SCR_MODPISEL2 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_MODPISEL2*)0xF4u)

/** \brief 3, Interrupt Request Register 2 */
#define SCR_IRCON2 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_IRCON2*)0xF4u)

/** \brief 3, External Interrupt Control Register 0 */
#define SCR_EXICON0 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_EXICON0*)0xF4u)

/** \brief 4, SCR Interrupt Data Exchange Register */
#define SCR_SCRINTEXCHG /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SCRINTEXCHG*)0xF5u)

/** \brief 4, Peripheral Input Select Register 3 */
#define SCR_MODPISEL3 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_MODPISEL3*)0xF5u)

/** \brief 4, External Interrupt Control Register 1 */
#define SCR_EXICON1 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_EXICON1*)0xF5u)

/** \brief 5, TriCore Interrupt Data Exchange Register */
#define SCR_TCINTEXCHG /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_TCINTEXCHG*)0xF6u)

/** \brief 5, Peripheral Input Select Register 4 */
#define SCR_MODPISEL4 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_MODPISEL4*)0xF6u)

/** \brief 5, External Interrupt Control Register 2 */
#define SCR_EXICON2 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_EXICON2*)0xF6u)

/** \brief 6, Peripheral Input Select Register 5 */
#define SCR_MODPISEL5 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_MODPISEL5*)0xF7u)

/** \brief 6, SCR Reset Status Register */
#define SCR_SCU_RSTST /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SCU_RSTST*)0xF7u)

/** \brief 6, External Interrupt Control Register 3 */
#define SCR_EXICON3 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_EXICON3*)0xF7u)

/** \brief 7, Main Reset Status Register */
#define SCR_SCU_MRSTST /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SCU_MRSTST*)0xF8u)

/** \brief 7, Peripheral Interrupt Enable Register */
#define SCR_SCU_MODIEN /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SCU_MODIEN*)0xF8u)

/** \brief 8, Module Suspend Control Register */
#define SCR_DBG_MODSUSP /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_DBG_MODSUSP*)0xF9u)

/** \brief 8, SCU Status Register */
#define SCR_SCU_SR /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SCU_SR*)0xF9u)

/** \brief 8, Reset Control Register */
#define SCR_SCU_RSTCON /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SCU_RSTCON*)0xF9u)

/** \brief 9, ADCOMP Result Register */
#define SCR_ADCOMP_RES /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_ADCOMP_RES*)0xFAu)

/** \brief 9, Clock Control Register */
#define SCR_SCU_CMCON /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SCU_CMCON*)0xFAu)

/** \brief A, ADCOMP Control Register */
#define SCR_ADCOMP_CON /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_ADCOMP_CON*)0xFBu)

/** \brief A, Peripheral Management Control Register 1 */
#define SCR_SCU_PMCON1 /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SCU_PMCON1*)0xFBu)

/** \brief B, Standby Mode Wake-Up Register */
#define SCR_SCU_STDBYWKP /*lint --e(923, 9078)*/ (*(__sfr volatile Ifx_SCR_SCU_STDBYWKP*)0xFCu)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXSCR_REG_H */
